name: README build

on:
  push:
    branches:
      - main
    paths:
      - "today.py"
      - "requirements.txt"
      - ".github/workflows/**"
  schedule:
    - cron: "0 4 * * *" # Fixed: Runs daily at 04:00 UTC
  workflow_dispatch: # Allow manual triggering

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          fetch-depth: 0 # Fetch full history for better git operations

      - name: Set up Python
        uses: actions/setup-python@v5 # Updated to latest version
        with:
          python-version: "3.11"

      - name: Cache pip packages
        uses: actions/cache@v4 # Updated to latest version
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            python -m pip install -r requirements.txt
          else
            echo "Warning: requirements.txt not found"
            exit 1
          fi

      - name: Create cache directory
        run: mkdir -p cache

      - name: Run update script
        env:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          USER_NAME: ${{ secrets.USER_NAME }}
        run: |
          if [ -f today.py ]; then
            python today.py
          else
            echo "Error: today.py not found"
            exit 1
          fi
        timeout-minutes: 10 # Prevent hanging scripts

      - name: Check for changes
        id: changes
        run: |
          if git diff --quiet && git diff --cached --quiet; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Commit and push changes
        if: steps.changes.outputs.changed == 'true'
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add .
          git commit -m "chore: update README [automated]

          - Updated by GitHub Actions
          - Triggered by: ${{ github.event_name }}
          - Commit: ${{ github.sha }}"
          git push

      - name: Summary
        run: |
          if [ "${{ steps.changes.outputs.changed }}" == "true" ]; then
            echo "✅ README updated successfully"
          else
            echo "ℹ️ No changes detected, README is up to date"
          fi
